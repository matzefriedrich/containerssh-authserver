// Code generated by parsley-cli; DO NOT EDIT.
//
// This file was automatically generated and any changes to it will be overwritten.

package services

import (
	"github.com/matzefriedrich/containerssh-authserver/internal/configuration"
	"github.com/matzefriedrich/parsley/pkg/features"
	"go.containerssh.io/containerssh/config"
	"golang.org/x/crypto/ssh"
)

type userProfileServiceMock struct {
	features.MockBase
	GetProfileFunc      GetProfileFunc
	VerifyPublicKeyFunc VerifyPublicKeyFunc
}

type GetProfileFunc func(authenticatedUser string) (configuration.UserProfile, error)
type VerifyPublicKeyFunc func(username string, key ssh.PublicKey) (bool, error)

const (
	FunctionGetProfile      = "GetProfile"
	FunctionVerifyPublicKey = "VerifyPublicKey"
)

func (m *userProfileServiceMock) GetProfile(authenticatedUser string) (configuration.UserProfile, error) {
	m.TraceMethodCall(FunctionGetProfile, authenticatedUser)
	return m.GetProfileFunc(authenticatedUser)
}

func (m *userProfileServiceMock) VerifyPublicKey(username string, key ssh.PublicKey) (bool, error) {
	m.TraceMethodCall(FunctionVerifyPublicKey, username, key)
	return m.VerifyPublicKeyFunc(username, key)
}

var _ UserProfileService = (*userProfileServiceMock)(nil)

// NewUserProfileServiceMock Creates a new configurable userProfileServiceMock object.
func NewUserProfileServiceMock() *userProfileServiceMock {
	mock := &userProfileServiceMock{
		MockBase: features.NewMockBase(),
		GetProfileFunc: func(authenticatedUser string) (configuration.UserProfile, error) {
			var result0 configuration.UserProfile
			var result1 error
			return result0, result1
		},
		VerifyPublicKeyFunc: func(username string, key ssh.PublicKey) (bool, error) {
			var result0 bool
			var result1 error
			return result0, result1
		},
	}
	mock.AddFunction(FunctionGetProfile, "GetProfile(authenticatedUser string) (configuration.UserProfile, error)")
	mock.AddFunction(FunctionVerifyPublicKey, "VerifyPublicKey(username string, key ssh.PublicKey) (bool, error)")
	return mock
}

type containerAppConfigServiceMock struct {
	features.MockBase
	CreateApplicationConfigForFunc CreateApplicationConfigForFunc
}

type CreateApplicationConfigForFunc func(authenticatedUser string) (config.AppConfig, error)

const (
	FunctionCreateApplicationConfigFor = "CreateApplicationConfigFor"
)

func (m *containerAppConfigServiceMock) CreateApplicationConfigFor(authenticatedUser string) (config.AppConfig, error) {
	m.TraceMethodCall(FunctionCreateApplicationConfigFor, authenticatedUser)
	return m.CreateApplicationConfigForFunc(authenticatedUser)
}

var _ ContainerAppConfigService = (*containerAppConfigServiceMock)(nil)

// NewContainerAppConfigServiceMock Creates a new configurable containerAppConfigServiceMock object.
func NewContainerAppConfigServiceMock() *containerAppConfigServiceMock {
	mock := &containerAppConfigServiceMock{
		MockBase: features.NewMockBase(),
		CreateApplicationConfigForFunc: func(authenticatedUser string) (config.AppConfig, error) {
			var result0 config.AppConfig
			var result1 error
			return result0, result1
		},
	}
	mock.AddFunction(FunctionCreateApplicationConfigFor, "CreateApplicationConfigFor(authenticatedUser string) (config.AppConfig, error)")
	return mock
}
